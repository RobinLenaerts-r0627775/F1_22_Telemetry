// <auto-generated />
using AdfinityMapper.Data.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace f1Telemetry.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230204113434_HeaderWithProps")]
    partial class HeaderWithProps
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("f1Telemetry.Data.PacketHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<uint>("FrameIdentifier")
                        .HasColumnType("int unsigned");

                    b.Property<sbyte>("GameMajorVersion")
                        .HasColumnType("tinyint");

                    b.Property<sbyte>("GameMinorVersion")
                        .HasColumnType("tinyint");

                    b.Property<ushort>("PacketFormat")
                        .HasColumnType("smallint unsigned");

                    b.Property<sbyte>("PacketId")
                        .HasColumnType("tinyint");

                    b.Property<sbyte>("PacketVersion")
                        .HasColumnType("tinyint");

                    b.Property<sbyte>("PlayerCarIndex")
                        .HasColumnType("tinyint");

                    b.Property<sbyte>("SecondaryPlayerCarIndex")
                        .HasColumnType("tinyint");

                    b.Property<float>("SessionTime")
                        .HasColumnType("float");

                    b.Property<ulong>("SessionUID")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("PacketHeaders", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
